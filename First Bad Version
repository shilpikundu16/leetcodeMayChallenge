/* Link to the problem of Day 1: https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/534/week-1-may-1st-may-7th/3316/

  We have tried to minimize the number of calls to the API with the help of binary search.
  Since this is a simple Binary search the time complexity is O(LogN).
  
  
  The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */

public class Solution extends VersionControl {
    public int firstBadVersion(int n) {
       int left = 1, right=n;
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (isBadVersion(mid))
            right = mid;
        else 
            left = mid + 1;
    }
    return left;
    }
} 
